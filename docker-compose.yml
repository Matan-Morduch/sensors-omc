services:
  frontend:
    build:
      context: ./sensors-frontend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - app-network
    depends_on:
      - sensors-gateway

  sensors-gateway:
    build:
      context: .
      dockerfile: sensors-gateway/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - kafka
      - timescaledb
      - sensors-monitoring
    networks:
      - app-network

  sensors-monitoring:
    build:
      context: .
      dockerfile: sensors-monitoring/Dockerfile
    ports:
      - "3001:3001"
    networks:
      - app-network
    depends_on:
      - timescaledb
      - kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka.yml:/kafka.yml
    networks:
      - app-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
    networks:
      - app-network

  timescaledb:
    image: timescale/timescaledb:latest-pg12
    environment:
      POSTGRES_DB: omcSensors
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      TZ: Asia/Jerusalem
    ports:
      - "5455:5432"
    volumes:
      - timescaledb-data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  timescaledb-data:
